Vaccination Diary (On Shelter by Location)
###
Diary
###
PostgreSQL MySQL SQLite
###
Vaccinations required to date for shelter animals, broken down by location.
###
en
###
SELECT
a.ShelterCode, a.AnimalName, t.AnimalType, il.LocationName,
v.VaccinationType, av.DateRequired, av.Comments,
CASE
WHEN a.ActiveMovementType = 2 THEN (SELECT MovementType FROM lksmovementtype WHERE ID = a.ActiveMovementType)
ELSE il.LocationName END AS DisplayLocationName
FROM animal a
INNER JOIN animaltype t ON t.ID = a.AnimalTypeID
INNER JOIN animalvaccination av ON a.ID = av.AnimalID
INNER JOIN vaccinationtype v ON av.VaccinationID = v.ID
INNER JOIN internallocation il ON il.ID = a.ShelterLocation
WHERE av.DateOfVaccination Is Null
AND av.DateRequired <= '$CURRENT_DATE$'
AND a.Archived = 0
ORDER BY 
CASE
WHEN a.ActiveMovementType = 2 THEN (SELECT MovementType FROM lksmovementtype WHERE ID = a.ActiveMovementType)
ELSE il.LocationName END, av.DateRequired
###
$$HEADER
HEADER$$

$$GROUP_DisplayLocationName
$$HEAD
<h2>$DISPLAYLOCATIONNAME</h2>
<table border=1><tr>
<td><b>Code</b></td>
<td><b>Name</b></td>
<td><b>Type</b></td>
<td><b>Vaccination Type</b></td>
<td><b>Required</b></td>
<td><b>Comments</b></td>
</tr>
$$FOOT
</table>
GROUP$$

$$BODY<tr>
<td>$SHELTERCODE</td>
<td>$ANIMALNAME</td>
<td>$ANIMALTYPE</td>
<td>$VACCINATIONTYPE</td>
<td>$DATEREQUIRED</td>
<td>$COMMENTS</td>
</tr>
BODY$$

$$FOOTER
FOOTER$$
&&&
Vaccination Diary (On Shelter by Location, Date Range)
###
Diary
###
PostgreSQL MySQL SQLite
###
Vaccinations required between two dates for shelter animals, broken down by location.
###
en
###
SELECT
a.ShelterCode, a.AnimalName, t.AnimalType, il.LocationName,
v.VaccinationType, av.DateRequired, av.Comments,
CASE
WHEN a.ActiveMovementType = 2 THEN (SELECT MovementType FROM lksmovementtype WHERE ID = a.ActiveMovementType)
ELSE il.LocationName END AS DisplayLocationName
FROM animal a
INNER JOIN animaltype t ON t.ID = a.AnimalTypeID
INNER JOIN animalvaccination av ON a.ID = av.AnimalID
INNER JOIN vaccinationtype v ON av.VaccinationID = v.ID
INNER JOIN internallocation il ON il.ID = a.ShelterLocation
WHERE av.DateOfVaccination Is Null
AND av.DateRequired >= '$ASK DATE Enter the from date$'
AND av.DateRequired <= '$ASK DATE Enter the to date$'
AND (a.Archived = 0 OR a.ActiveMovementType = 2)
ORDER BY 
CASE
WHEN a.ActiveMovementType = 2 THEN (SELECT MovementType FROM lksmovementtype WHERE ID = a.ActiveMovementType)
ELSE il.LocationName END, av.DateRequired
###
$$HEADER
HEADER$$

$$GROUP_DisplayLocationName
$$HEAD
<h2>$DISPLAYLOCATIONNAME</h2>
<table border=1><tr>
<td><b>Code</b></td>
<td><b>Name</b></td>
<td><b>Type</b></td>
<td><b>Vaccination Type</b></td>
<td><b>Required</b></td>
<td><b>Comments</b></td>
</tr>
$$FOOT
</table>
GROUP$$

$$BODY<tr>
<td>$SHELTERCODE</td>
<td>$ANIMALNAME</td>
<td>$ANIMALTYPE</td>
<td>$VACCINATIONTYPE</td>
<td>$DATEREQUIRED</td>
<td>$COMMENTS</td>
</tr>
BODY$$

$$FOOTER
FOOTER$$

